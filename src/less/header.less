//
// navigation
//

@noren-columns: 6;

.noren-top {
  background-color: @ebiiro;

  .navbar-brand {
    @media (min-width: @screen-sm-min) {
      padding: 0;
      height: auto;
    }
  }

  .navbar-toggle {
    border-color: @ebiiro-light;
    &:hover,
    &:active {
      background-color: @ebiiro-light;
    }

    .icon-bar {
      background-color: @ebiiro-lighter;
    }
  }

  .logo {
    margin-top: 1px;
    margin-bottom: 1px;
    @media (min-width: @screen-sm-min) {
      margin-top: 15px;
      margin-bottom: 10px;
      margin-left: (-@grid-gutter-width / 2);
    }

    > .symbol-mark {
      float: left;
      width: 60px;
      height: 60px;
      margin-top: -5px;
      .img-retina("/images/s/symbol-mark.png"; "/images/s/symbol-mark@2x.png"; 60px; 60px);
    }

    > .logo-type {
      width: 188px;
      height: 18px;
      .img-retina("/images/l/logo-type-xs.png"; "/images/l/logo-type-xs@2x.png"; 188px; 18px);

      @media (min-width: @screen-sm-min) {
        margin-left: (60px + @grid-gutter-width / 2);
        width: 266px;
        height: 25px;
        background-image: url("/images/l/logo-type.png");
      }
      @media
      only screen and (min-width: @screen-sm-min) and (-webkit-min-device-pixel-ratio: 2),
      only screen and (min-width: @screen-sm-min) and (min--moz-device-pixel-ratio: 2),
      only screen and (min-width: @screen-sm-min) and (-o-min-device-pixel-ratio: 2/1),
      only screen and (min-width: @screen-sm-min) and (min-device-pixel-ratio: 2),
      only screen and (min-width: @screen-sm-min) and (min-resolution: 192dpi),
      only screen and (min-width: @screen-sm-min) and (min-resolution: 2dppx) {
        background-image: url("/images/l/logo-type@2x.png");
        background-size: 266px 25px;
      }
    }
  }

  .tag-line {
    margin-left: 60px;
    margin-top: 5px;
    color: @gray-lighter;
    line-height: 15px;
    font-size: @font-size-base;
  }

  a:hover,
  a:active {
    text-decoration: none !important;
  }

  .search {
    margin: 10px (-@grid-gutter-width / 2) 0 0;
  }

  .btn-noren {
    .button-variant(@white; @ebiiro; transparent);
    margin-top: 15px;
    margin-bottom: 15px;
  }

  .dropdown-noren {
    background-color: @ebiiro-lighter;
  }

  // just copy

  /*
  // Make the div behave like a button
  .btn-group {
    position: relative;
    display: inline-block;
    vertical-align: middle; // match .btn alignment given font-size hack above
    > .btn {
      position: relative;
      float: left;
      // Bring the "active" button to the front
      &:hover,
      &:focus,
      &:active,
      &.active {
        z-index: 2;
      }
      &:focus {
        // Remove focus outline when dropdown JS adds it after closing the menu
        outline: 0;
      }
    }
  }

  // Prevent double borders when buttons are next to each other
  .btn-group {
    .btn + .btn,
    .btn + .btn-group,
    .btn-group + .btn,
    .btn-group + .btn-group {
      margin-left: -1px;
    }
  }

  .btn-group > .btn:not(:first-child):not(:last-child):not(.dropdown-toggle) {
    border-radius: 0;
  }

  // Set corners individual because sometimes a single button can be in a .btn-group and we need :first-child and :last-child to both match
  .btn-group > .btn:first-child {
    margin-left: 0;
    &:not(:last-child):not(.dropdown-toggle) {
      .border-right-radius(0);
    }
  }
  // Need .dropdown-toggle since :last-child doesn't apply given a .dropdown-menu immediately after it
  .btn-group > .btn:last-child:not(:first-child),
  .btn-group > .dropdown-toggle:not(:first-child) {
    .border-left-radius(0);
  }


  // Custom edits for including btn-groups within btn-groups (useful for including dropdown buttons within a btn-group)
  .btn-group > .btn-group {
    float: left;
  }
  .btn-group > .btn-group:not(:first-child):not(:last-child) > .btn {
    border-radius: 0;
  }
  .btn-group > .btn-group:first-child {
    > .btn:last-child,
    > .dropdown-toggle {
      .border-right-radius(0);
    }
  }
  .btn-group > .btn-group:last-child > .btn:first-child {
    .border-left-radius(0);
  }

  // On active and open, don't show outline
  .btn-group .dropdown-toggle:active,
  .btn-group.open .dropdown-toggle {
    outline: 0;
  }


  // The clickable button for toggling the menu
  // Remove the gradient and set the same inset shadow as the :active state
  .btn-group.open .dropdown-toggle {
    .box-shadow(inset 0 3px 5px rgba(0,0,0,.125));

    // Show no shadow for `.btn-link` since it has no other button styles.
    &.btn-link {
      .box-shadow(none);
    }
  }


  // Reposition the caret
  .btn .caret {
    margin-left: 0;
  }
  // Carets in other button sizes
  .btn-lg .caret {
    border-width: @caret-width-large @caret-width-large 0;
    border-bottom-width: 0;
  }
  // Upside down carets for .dropup
  .dropup .btn-lg .caret {
    border-width: 0 @caret-width-large @caret-width-large;
  }

  .dropdown-menu {
    position: absolute;
    top: 100%;
    left: 0;
    z-index: @zindex-dropdown;
    display: none; // none by default, but block on "open" of the menu
    float: left;
    min-width: 160px;
    padding: 5px 0;
    margin: 2px 0 0; // override default ul
    list-style: none;
    font-size: @font-size-base;
    text-align: left; // Ensures proper alignment if parent has it changed (e.g., modal footer)
    background-color: @dropdown-bg;
    border: 1px solid @dropdown-fallback-border; // IE8 fallback
    border: 1px solid @dropdown-border;
    border-radius: @border-radius-base;
    .box-shadow(0 6px 12px rgba(0,0,0,.175));
    background-clip: padding-box;

    // Aligns the dropdown menu to right
    //
    // Deprecated as of 3.1.0 in favor of `.dropdown-menu-[dir]`
    &.pull-right {
      right: 0;
      left: auto;
    }

    // Dividers (basically an hr) within the dropdown
    .divider {
      .nav-divider(@dropdown-divider-bg);
    }

    // Links within the dropdown menu
    > li > a {
      display: block;
      padding: 3px 20px;
      clear: both;
      font-weight: normal;
      line-height: @line-height-base;
      color: @dropdown-link-color;
      white-space: nowrap; // prevent links from randomly breaking onto new lines
    }
  }

  // Hover/Focus state
  .dropdown-menu > li > a {
    &:hover,
    &:focus {
      text-decoration: none;
      color: @dropdown-link-hover-color;
      background-color: @dropdown-link-hover-bg;
    }
  }

  // Active state
  .dropdown-menu > .active > a {
    &,
    &:hover,
    &:focus {
      color: @dropdown-link-active-color;
      text-decoration: none;
      outline: 0;
      background-color: @dropdown-link-active-bg;
    }
  }

  // Disabled state
  //
  // Gray out text and ensure the hover/focus state remains gray

  .dropdown-menu > .disabled > a {
    &,
    &:hover,
    &:focus {
      color: @dropdown-link-disabled-color;
    }
  }
  // Nuke hover/focus effects
  .dropdown-menu > .disabled > a {
    &:hover,
    &:focus {
      text-decoration: none;
      background-color: transparent;
      background-image: none; // Remove CSS gradient
      .reset-filter();
      cursor: not-allowed;
    }
  }
  */


}

.noren-bottom {
  background-color: @ebiiro;
  
  @media (min-width: @screen-sm-min) {
    background-color: inherit;
    overflow: hidden;
    padding-bottom: 6px;
    color: @gray-lighter;
  }

  > .container {
    @media (min-width: @screen-sm-min) {
      position: relative;
    }

    > .nav-noren-wrapper {
      &.navbar-collapse {
        box-shadow: inset 0 1px 0 @ebiiro-light;
      }

      @media (min-width: @screen-sm-min) {
        margin-right: -15px;
        margin-left: -15px;

        &:before, &:after {
          content: " ";
          display: block;
          position: absolute;
          top: 0;
          width: 10000px;
          height: 40px;
          background: @ebiiro;
          box-shadow: 0 2px 4px rgba(0,0,0,0.5);
        }
        &:before {
          left: -10001px;
        }
        &:after {
          right: -10001px;
        }
      }

      .nav-noren {
        @media (min-width: @screen-sm-min) {
          padding-left: 0;
          margin-bottom: 0;
          list-style: none;
          .clearfix();
        }

        > li {
          @media (min-width: @screen-sm-min) {
            display: block;
            float: left;
            position: relative;
            width: (@container-sm / @noren-columns);
            min-height: 1px;
            padding-right: 1px;
            padding-left: 1px;
            text-align: center;
            perspective: 400px;
          }

          @media (min-width: @screen-md-min) {
            width: ceil((@container-md / @noren-columns));
            @media (max-width: @screen-md-max) {
              &:nth-child(1),
              &:nth-child(2) {
                width: floor((@container-md / @noren-columns));
              }
            }
          }

          @media (min-width: @screen-lg-min) {
            width: (@container-lg / @noren-columns);
          }

          > a {
            color: @gray-lighter;

            @media (min-width: @screen-sm-min) {
              display: block;
              padding: 10px 0;
              line-height: @line-height-base;
              background-color: @ebiiro;
              white-space: pre;
              transition: transform ease 0.5s;
              transform: rotateX(0deg);
              box-shadow: 0 2px 4px rgba(0,0,0,0.5);
              transform-origin: 50% 0;

              &:before,
              &:after {
                content: " ";
                display: block;
                position: absolute;
                top: 0;
                right: 1px;
                bottom: 0;
                left: 1px;
                width: auto;
                height: auto;
                margin: 0;
                .opacity(0);
                pointer-events: none;
                transition: opacity ease 0.5s;
              }
              &:before {
                #gradient > .vertical-three-colors(rgba(255, 255, 255, 0); rgba(255, 255, 255, 0.1); 20%; rgba(255, 255, 255, 0.2));
              }
              &:after {
                #gradient > .vertical-three-colors(rgba(0, 0, 0, 0); rgba(0, 0, 0, 0.1); 20%; rgba(0, 0, 0, 0.2));
              }
            }

            &:hover,
            &:focus {
              background-color: @ebiiro-light;
              text-decoration: none;
              color: @bg-color;

              @media (min-width: @screen-sm-min) {
                background-color: @ebiiro;
                transform: rotateX(30deg);
                &:before {
                  .opacity(1);
                }
              }
            }
          }

          &:hover {
            @media (min-width: @screen-sm-min) {
              z-index: 100;
            }
          }

          &.active {
            @media (min-width: @screen-sm-min) {
              z-index: 50;
            }

            > a,
            > a:hover,
            > a:focus {
              background-color: @ebiiro-light;

              @media (min-width: @screen-sm-min) {
                background-color: @ebiiro;
                transform: none;
                transition: none;
                animation: swing ease-in-out 3s infinite alternate;
                cursor: default;
                color: @gray-lighter;
                &:before,
                &:after {
                  .opacity(0);
                  transition: none;
                }
                &:before {
                  animation: highlight ease-in-out 3s infinite alternate;
                }
                &:after {
                  animation: highlight ease-in-out 3s infinite alternate-reverse;
                }
              }
            }
          }
        }
      }
    }
  }
}

.keyframes(swing, {
  transform: rotateX(20deg);
}, {
  transform: rotateX(-20deg);
});

.keyframes-three-rules(highlight, {
  .opacity(0.5);
}, {
  .opacity(0);
}, 50%, {
  .opacity(0);
});